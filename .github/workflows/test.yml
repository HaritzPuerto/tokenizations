name: test rust and python package

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
        os: [ubuntu-16.04, ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
    - name: Test with cargo
      uses: actions-rs/cargo@v1.0.1
      with:
          command: test
          toolchain: nightly

    - name: Install dependencies with pip
      working-directory: python
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Test with pytest
      working-directory: python
      run: |
        poetry install
        poetry run maturin develop
        poetry run pytest tests

    - name: Publish package to test-PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: ${{ secrets.TEST_PYPI_USER }}
        password: ${{ secrets.TEST_PYPI_PASS }}
        packages_dir: target/wheels
        repository_url: https://test.pypi.org/legacy/

    - name: Recreate python env and check test-pypi package
      working-directory: python
      run: |
        poetry env remove python
        poetry run pip install --extra-index-url https://testpypi.python.org/pypi pytokenizations
        poetry run pytest tests

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: ${{ secrets.PYPI_USER }}
        password: ${{ secrets.PYPI_PASS }}
        packages_dir: target/wheels

